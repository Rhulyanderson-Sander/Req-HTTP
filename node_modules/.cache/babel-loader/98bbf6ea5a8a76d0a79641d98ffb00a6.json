{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n\n// custom hooks\nexport const useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n\n  // refatorando post\n  const [config, setConfig] = useState(null);\n  const [method, setMethod] = useState(null);\n  const [callFetch, setCallFetch] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(url);\n      const json = await res.json();\n      setData(json);\n    };\n    fetchData();\n  }, [url, callFetch]);\n\n  // refatorando post\n  useEffect(() => {\n    const httpRequest = async () => {\n      if (method === \"POST\") {\n        let fetchOptions = [url, config];\n        const res = await fetch(...fetchOptions);\n        const json = await res.json();\n        setCallFetch(json);\n      }\n    };\n    ht;\n  }, [config]);\n  return {\n    data\n  };\n};\n_s(useFetch, \"Deg5fuq0MIlYddL32dRsJz65cA0=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","config","setConfig","method","setMethod","callFetch","setCallFetch","fetchData","res","fetch","json","httpRequest","fetchOptions","ht"],"sources":["/Users/rhulyandersonsander/Desktop/ReqHTTP/httpreact/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n// custom hooks\nexport const useFetch = (url) => {\n    const [data, setData] = useState(null)\n\n    // refatorando post\n    const [config, setConfig ] = useState(null)\n    const [method, setMethod] = useState(null)\n    const [callFetch, setCallFetch] = useState(false)\n\n    useEffect(() =>{\n\n        const fetchData = async () => {\n\n            const res = await fetch(url)\n\n            const json = await res.json()\n\n            setData(json)\n            \n        }\n\n        fetchData();\n\n    }, [url, callFetch]);\n\n    // refatorando post\n    useEffect(() => {\n\n      const httpRequest = async () => {\n        if(method === \"POST\") {\n\n            let fetchOptions = [url, config]\n\n            const res = await fetch(...fetchOptions)\n            const json = await res.json()\n\n            setCallFetch(json);\n            \n        }\n      }\n\n      ht\n    }, [config])\n\n    return { data };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA,OAAO,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAE,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAK;IAEX,MAAMW,SAAS,GAAG,YAAY;MAE1B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAG,CAAC;MAE5B,MAAMY,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;MAE7BV,OAAO,CAACU,IAAI,CAAC;IAEjB,CAAC;IAEDH,SAAS,EAAE;EAEf,CAAC,EAAE,CAACT,GAAG,EAAEO,SAAS,CAAC,CAAC;;EAEpB;EACAT,SAAS,CAAC,MAAM;IAEd,MAAMe,WAAW,GAAG,YAAY;MAC9B,IAAGR,MAAM,KAAK,MAAM,EAAE;QAElB,IAAIS,YAAY,GAAG,CAACd,GAAG,EAAEG,MAAM,CAAC;QAEhC,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGG,YAAY,CAAC;QACxC,MAAMF,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;QAE7BJ,YAAY,CAACI,IAAI,CAAC;MAEtB;IACF,CAAC;IAEDG,EAAE;EACJ,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAEZ,OAAO;IAAEF;EAAK,CAAC;AACnB,CAAC;AAAC,GA5CWF,QAAQ"},"metadata":{},"sourceType":"module"}