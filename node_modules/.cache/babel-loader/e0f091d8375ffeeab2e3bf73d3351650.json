{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n\n// custom hooks\nexport const useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n\n  // refatorando post\n  const [config, setConfig] = useState(null);\n  const [method, setMethod] = useState(null);\n  const [callFetch, setCallFetch] = useState(false);\n\n  // loading\n  const [loading, setLoading] = useState(false);\n\n  // Tratanto erros \n  const [error, setError] = useState(null);\n  const httpConfig = (data, method) => {\n    if (method === \"POST\") {\n      setConfig({\n        method,\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      setMethod(method);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      // loading\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        setData(json);\n      } catch (error) {\n        setError(\"Houve algum erro ao carregar os dados!\");\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [url, callFetch]);\n\n  // refatorando post\n  useEffect(() => {\n    const httpRequest = async () => {\n      if (method === \"POST\") {\n        let fetchOptions = [url, config];\n        const res = await fetch(...fetchOptions);\n        const json = await res.json();\n        setCallFetch(json);\n      }\n    };\n    httpRequest();\n  }, [config, method, url]);\n  return {\n    data,\n    httpConfig,\n    loading,\n    error\n  };\n};\n_s(useFetch, \"0udXU+Gs4YtTuLg5dc+bFEDChdQ=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","config","setConfig","method","setMethod","callFetch","setCallFetch","loading","setLoading","error","setError","httpConfig","headers","body","JSON","stringify","fetchData","res","fetch","json","httpRequest","fetchOptions"],"sources":["/Users/rhulyandersonsander/Desktop/ReqHTTP/httpreact/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n// custom hooks\nexport const useFetch = (url) => {\n    const [data, setData] = useState(null)\n\n    // refatorando post\n    const [config, setConfig ] = useState(null)\n    const [method, setMethod] = useState(null)\n    const [callFetch, setCallFetch] = useState(false)\n\n     // loading\n  const [loading, setLoading] = useState(false);\n\n  // Tratanto erros \n  const [error, setError] = useState(null)\n\n    const httpConfig = (data, method) => {\n        if(method === \"POST\"){\n            setConfig({\n                method,\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            })\n\n            setMethod(method);\n        }\n    }\n\n    useEffect(() =>{\n\n        const fetchData = async () => {\n\n\n            // loading\n            setLoading(true)\n\n            try {\n                const res = await fetch(url)\n\n                const json = await res.json()\n\n                setData(json)\n            } catch (error) {\n                setError(\"Houve algum erro ao carregar os dados!\")\n            }\n            \n            setLoading(false)\n        }\n\n        fetchData();\n\n    }, [url, callFetch]);\n\n    // refatorando post\n    useEffect(() => {\n\n      const httpRequest = async () => {\n        if(method === \"POST\") {\n\n            let fetchOptions = [url, config]\n\n            const res = await fetch(...fetchOptions)\n            const json = await res.json()\n\n            setCallFetch(json);\n            \n        }\n      }\n\n      httpRequest();\n    }, [config, method, url])\n\n    return { data, httpConfig, loading, error };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA,OAAO,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAE,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEhD;EACH,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMgB,UAAU,GAAG,CAACZ,IAAI,EAAEI,MAAM,KAAK;IACjC,IAAGA,MAAM,KAAK,MAAM,EAAC;MACjBD,SAAS,CAAC;QACNC,MAAM;QACNS,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,IAAI;MAC7B,CAAC,CAAC;MAEFK,SAAS,CAACD,MAAM,CAAC;IACrB;EACJ,CAAC;EAEDP,SAAS,CAAC,MAAK;IAEX,MAAMoB,SAAS,GAAG,YAAY;MAG1B;MACAR,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACA,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAACpB,GAAG,CAAC;QAE5B,MAAMqB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;QAE7BnB,OAAO,CAACmB,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOV,KAAK,EAAE;QACZC,QAAQ,CAAC,wCAAwC,CAAC;MACtD;MAEAF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDQ,SAAS,EAAE;EAEf,CAAC,EAAE,CAAClB,GAAG,EAAEO,SAAS,CAAC,CAAC;;EAEpB;EACAT,SAAS,CAAC,MAAM;IAEd,MAAMwB,WAAW,GAAG,YAAY;MAC9B,IAAGjB,MAAM,KAAK,MAAM,EAAE;QAElB,IAAIkB,YAAY,GAAG,CAACvB,GAAG,EAAEG,MAAM,CAAC;QAEhC,MAAMgB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGG,YAAY,CAAC;QACxC,MAAMF,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;QAE7Bb,YAAY,CAACa,IAAI,CAAC;MAEtB;IACF,CAAC;IAEDC,WAAW,EAAE;EACf,CAAC,EAAE,CAACnB,MAAM,EAAEE,MAAM,EAAEL,GAAG,CAAC,CAAC;EAEzB,OAAO;IAAEC,IAAI;IAAEY,UAAU;IAAEJ,OAAO;IAAEE;EAAM,CAAC;AAC/C,CAAC;AAAC,GAzEWZ,QAAQ"},"metadata":{},"sourceType":"module"}